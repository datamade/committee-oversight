version: '2.4'

services:
  app:
    image: committeeoversight
    container_name: committeeoversight
    restart: always
    build: .
    # Allow container to be attached to, e.g., to access the pdb shell
    stdin_open: true
    tty: true
    ports:
      # Map ports on your computer to ports on your container. This allows you,
      # e.g., to visit your containerized application in a browser on your
      # computer.
      - 8000:8000  # e.g., 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount the development directory as a volume into the container, so
      # Docker automatically recognizes your changes.
      - .:/app
      # Mount example configs as live configs in the container.
      - ${PWD}/committeeoversight/local_settings.example.py:/app/committeeoversight/local_settings.py
    command: python manage.py runserver 0.0.0.0:8000  # e.g., python manage.py runserver 0.0.0.0:8000

  migration:
    container_name: committeeoversight-migration
    image: committeeoversight:latest
    depends_on:
      # Declaring this dependency ensures that your application image is built
      # before migrations are run, and that your application and migrations can
      # be run from the same image, rather than creating purpose-specific
      # copies.
      - app
    volumes:
      # These should generally be the same as your application volumes.
      - .:/app
      - ${PWD}/committeeoversight/local_settings.example.py:/app/committeeoversight/local_settings.py
    command: python manage.py migrate  # e.g., python manage.py migrate

  postgres:
    container_name: committeeoversight-postgres
    restart: always
    image: postgres:11
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      # By default, Postgres instantiates an anonymous volume. Use a named
      # one, so your data persists beyond the life of the container. See this
      # post for a discussion of the pitfalls of Postgres and anonymous
      # volumes: https://linuxhint.com/run_postgresql_docker_compose/
      - committeeoversight-db-data:/var/lib/postgresql/data
      # Mount our initialization script.
      - ${PWD}/scripts/init-db.sh:/docker-entrypoint-initdb.d/10-init.sh
    environment:
      - POSTGRES_DB=hearings
      - POSTGRES_PASSWORD=postgres
    ports:
      - 32001:5432

volumes:
  # Declare your named volume for Postgres.
  committeeoversight-db-data:
